---
interface Props {
  target?: string;
  rel?: string;
  role?: "link" | "button";
  type?: "primary" | "secondary";
  style?: string;
  [key: string]: any;
}

const {
  target = "_blank",
  rel = "noopener noreferrer",
  role = "link",
  type = "primary",
  style,
  ...props
} = Astro.props as Props;

const baseClasses = [
  "px-5", // padding-left/right: 1.25rem
  "py-3", // padding-top/bottom: 0.75rem
  "font-clash", // font-family: "Clash" (you'll need to configure this in Tailwind)
  "font-normal", // font-weight: 450 (closest match)
  "text-base", // font-size: var(--fs-base)
  "border", // border-width: 1px, border-style: solid
  "flex",
  "justify-center",
  "items-center",
  "gap-2", // gap: 0.5rem
  "cursor-pointer",
  "transition-all", // transition for color, background-color, border-color
  "duration-150",
  "ease-out", // cubic-bezier(0.4, 0, 0.2, 1)
  "font-primary",
  "font-[450]",
];

const typeClasses = {
  primary: [
    "bg-white",
    "border-black",
    "text-black",
    "hover:bg-black",
    "hover:text-white",
  ],
  secondary: [
    "text-white",
    "bg-black", // you'll need to define this color in Tailwind config
    "border-secondary",
    "hover:bg-white",
    "hover:text-black",
    "hover:border-black",
  ],
} as const;

const classes = [...baseClasses, ...typeClasses[type]];
---

<a {...props} target={target} rel={rel} role={role} class:list={classes}>
  <slot name="icon-left" />
  <span> <slot /> </span>
  <slot name="icon-right" />
</a>
