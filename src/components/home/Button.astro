---
interface Props {
  target?: string;
  rel?: string;
  role?: "link" | "button";
  type?: "primary" | "secondary";
  class?: string;
}

const {
  target = "_blank",
  rel = "noopener noreferrer",
  role = "link",
  type = "primary",
  class: customClass = "",
  ...props
} = Astro.props;

const baseClasses = [
  "px-5", 
  "py-3", 
  "font-clash", 
  "text-base", 
  "border",
  "flex",
  "justify-center",
  "items-center",
  "gap-2", 
  "cursor-pointer",
  "transition-all", 
  "duration-150",
  "ease-out", 
  "font-primary",
  "font-[450]",
];

const typeClasses = {
  primary: [
    "bg-white",
    "border-black",
    "text-black",
    "hover:bg-black",
    "hover:text-white",
  ],
  secondary: [
    "text-white",
    "bg-black",
    "border-black",
    "border-secondary",
    "hover:bg-white",
    "hover:text-black",
    "hover:border-black",
  ],
} as const;

const classes = [...baseClasses, ...typeClasses[type], customClass];
---

<a {...props} target={target} rel={rel} role={role} class:list={classes}>
  <slot name="icon-left" />
  <span> <slot /> </span>
  <slot name="icon-right" />
</a>